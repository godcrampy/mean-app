{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/authguard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <ng-flash-message></ng-flash-message>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router'\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\nimport {ValidateService} from './services/validate.service'\r\nimport {AuthService} from './services/auth.service'\r\n\r\nimport {NgFlashMessagesModule} from 'ng-flash-messages'\r\nimport {AuthguardService} from './guards/authguard.service'\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthguardService]},\r\n  {path : 'profile', component: ProfileComponent, canActivate: [AuthguardService]}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    NgFlashMessagesModule.forRoot(),\r\n    HttpClientModule\r\n  ],\r\n  providers: [ValidateService, AuthService, AuthguardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"  <h1>Dashboard</h1>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n    <h1>MEAN Authentication App</h1>\\n    <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch </p>\\n    <div>\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Express Backend</h3>\\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Angular-CLI</h3>\\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>JWT Tokens</h3>\\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Login</h1>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group col-md-3\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-3\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-3\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router'\nimport {NgFlashMessageService} from 'ng-flash-messages'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String\n  password: String\n\n  constructor(private authService : AuthService,\n              private router : Router,\n              private ngFlashMessageService : NgFlashMessageService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username : this.username,\n      password : this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe((data: {success: boolean, msg: string, token: string, user: {}})=>{\n      if(data.success){\n        \n        this.authService.storeUserData(data.token, data.user)\n        this.authService.loadToken()\n        this.ngFlashMessageService.showFlashMessage({\n          // Array of messages each will be displayed in new line\n          messages: [\"Login Successful\"], \n          // Whether the flash can be dismissed by the user defaults to false\n          dismissible: true, \n          // Time after which the flash disappears defaults to 2000ms\n          timeout: 5000,\n          // Type of flash message, it defaults to info and success, warning, danger types can also be used\n          type: \"success\"\n        })\n        this.router.navigate(['/dashboard'])\n\n      }\n      else {\n        this.authService.loadToken()\n        this.ngFlashMessageService.showFlashMessage({\n          // Array of messages each will be displayed in new line\n          messages: [\"Invalid Username or Password\"], \n          // Whether the flash can be dismissed by the user defaults to false\n          dismissible: true, \n          // Time after which the flash disappears defaults to 2000ms\n          timeout: 5000,\n          // Type of flash message, it defaults to info and success, warning, danger types can also be used\n          type: \"danger\"\n        })\n        this.router.navigate(['/login'])\n      }\n    })\n\n}} ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light mb-4\\\">\\r\\n  <div class=\\\" container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MeanAuth App</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor03\\\" aria-controls=\\\"navbarColor03\\\"\\r\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor03\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\ntrue}\\\">Home</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"this.authService.isLoggedIn\\\" class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\ntrue}\\\">Dashboard</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"this.authService.isLoggedIn\\\" class=\\\"nav-link\\\" routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\ntrue}\\\">Profile</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"!this.authService.isLoggedIn\\\" class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\ntrue}\\\">Login</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"!this.authService.isLoggedIn\\\" class=\\\"nav-link\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\ntrue}\\\">Register</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a *ngIf=\\\"this.authService.isLoggedIn\\\" class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\r\\n          </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router'\nimport {NgFlashMessageService} from 'ng-flash-messages'\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n\n  constructor(private authService : AuthService,\n              private router : Router,\n              private ngFlashMessageService : NgFlashMessageService) { }\n\n  ngOnInit() {\n    this.authService.loadToken()\n  }\n  onLogoutClick(){\n    this.authService.logout()\n    this.ngFlashMessageService.showFlashMessage({\n      // Array of messages each will be displayed in new line\n      messages: [\"You have been logged out\"], \n      // Whether the flash can be dismissed by the user defaults to false\n      dismissible: true, \n      // Time after which the flash disappears defaults to 2000ms\n      timeout: 5000,\n      // Type of flash message, it defaults to info and success, warning, danger types can also be used\n      type: \"success\"\n    })\n    this.router.navigate(['/login'])\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2>{{user.name}}</h2>\\n  <div class=\\\"row\\\">\\n    <ul class=\\\"list-group col-md-4\\\">\\n      <li class=\\\"list-group-item\\\">Name: {{user.name}}</li>\\n      <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n      <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    </ul>\\n  </div>\\n  \\n  \\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user : Object\n\n  constructor(private authService : AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile : {user}) =>{\n      this.user = profile.user\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    \n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Register</h1>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n\\n  <div class=\\\"form-group col-md-3\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-3\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-4\\\">\\n    <label for=\\\"email\\\">Email address</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emal\\\" aria-describedby=\\\"emailHelp\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n  </div>\\n  <div class=\\\"form-group col-md-3\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-3\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service'\nimport {NgFlashMessageService} from 'ng-flash-messages'\nimport {AuthService} from '../../services/auth.service'\nimport {Router} from '@angular/router'\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: string\n  email: string\n  username: string\n  password: string\n\n  \n\n  constructor(private validateService : ValidateService,\n              private ngFlashMessageService : NgFlashMessageService,\n              private authService: AuthService,\n              private router : Router) { }\n\n  ngOnInit() {\n  }\n  \n\n  onRegisterSubmit(){\n    const user = {\n      name : this.name,\n      username : this.username,\n      password : this.password,\n      email : this.email\n    }\n    //Required Fields\n    if(!this.validateService.validateRegister(user)){\n      console.log(\"Please Fill all the fields\")\n      this.ngFlashMessageService.showFlashMessage({\n        // Array of messages each will be displayed in new line\n        messages: [\"Please Fill all the fields\"], \n        // Whether the flash can be dismissed by the user defaults to false\n        dismissible: true, \n        // Time after which the flash disappears defaults to 2000ms\n        timeout: 5000,\n        // Type of flash message, it defaults to info and success, warning, danger types can also be used\n        type: 'danger'\n      })\n      return false\n    }\n\n    //Email Regex\n    if(!this.validateService.validateEmail(user.email)){\n      console.log(\"Please Enter Valid Email\")\n      this.ngFlashMessageService.showFlashMessage({\n        // Array of messages each will be displayed in new line\n        messages: [\"Please Enter Valid Email\"], \n        // Whether the flash can be dismissed by the user defaults to false\n        dismissible: true, \n        // Time after which the flash disappears defaults to 2000ms\n        timeout: 5000,\n        // Type of flash message, it defaults to info and success, warning, danger types can also be used\n        type: 'danger'\n      })\n      return false\n    }\n    //Register User\n    this.authService.registerUser(user).subscribe((data: {success: boolean, msg: string})=>{\n      if (data.success){\n        console.log(\"Success\")\n      this.ngFlashMessageService.showFlashMessage({\n        // Array of messages each will be displayed in new line\n        messages: [\"Success\"], \n        // Whether the flash can be dismissed by the user defaults to false\n        dismissible: true, \n        // Time after which the flash disappears defaults to 2000ms\n        timeout: 5000,\n        // Type of flash message, it defaults to info and success, warning, danger types can also be used\n        type: \"success\"\n      })\n      this.router.navigate(['/login'])\n      }\n      else{\n        console.log(\"Failure\")\n        this.ngFlashMessageService.showFlashMessage({\n          // Array of messages each will be displayed in new line\n          messages: [\"Something Went Wrong\"], \n          // Whether the flash can be dismissed by the user defaults to false\n          dismissible: true, \n          // Time after which the flash disappears defaults to 2000ms\n          timeout: 5000,\n          // Type of flash message, it defaults to info and success, warning, danger types can also be used\n          type: 'danger'\n        })\n        this.router.navigate(['/register'])\n\n      }\n    })\n\n  }\n\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Router, CanActivate} from '@angular/router'\nimport {AuthService} from '../services/auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate {\n\n  constructor(private authService : AuthService,\n    private router : Router) { }\n    canActivate(){\n      if(this.authService.isLoggedIn){\n          return true\n      }\n      else {\n          this.router.navigate(['/login'])\n          return false\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\r\n//add httpclient instead of http as in video 7 \r\nimport { HttpClient } from '@angular/common/http';\r\n// add httpheader instead of headers as in video 7\r\nimport {HttpHeaders} from '@angular/common/http'\r\nimport { map } from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any\r\n  user: any\r\n  isLoggedIn : boolean = false\r\n\r\n  constructor(private http : HttpClient) { } \r\n\r\n  registerUser(user){\r\n    // use httpheader instead of headers as in video 7\r\n    let headers = new HttpHeaders()\r\n    headers.append('Content-Type', 'application/json')\r\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers}).pipe(map(res => res))\r\n  }\r\n\r\n  authenticateUser(user){\r\n    \r\n    //New format of header\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n    // headers.append('Content-Type', 'application/json') //Old Format\r\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers}).pipe(map(res => res))\r\n  }\r\n\r\n  getProfile(){\r\n    this.loadToken()\r\n    //New Format of Header\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authToken\r\n    })\r\n    return this.http.get('http://localhost:3000/users/profile', {headers}).pipe(map(res => res))\r\n    \r\n  }\r\n\r\n\r\n  storeUserData(token, user){\r\n    localStorage.setItem('id_token', token)\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n    this.authToken = token;\r\n    this.user = user\r\n  }\r\n\r\n  loadToken(){\r\n    \r\n    const token = localStorage.getItem('id_token')\r\n    this.authToken = token;\r\n    if (this.authToken){\r\n      this.isLoggedIn = true\r\n    }\r\n    else {\r\n      this.isLoggedIn = false\r\n    }\r\n    console.log(\"isLoggedIn: \" + this.isLoggedIn)\r\n  }\r\n\r\n  logout(){\r\n    this.authToken = null\r\n    this.user = null\r\n    localStorage.clear()\r\n    this.loadToken()\r\n  }\r\n\r\n  \r\n}","import { Injectable } from '@angular/core';\nimport { User} from '../models/user.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n  validateRegister(user : User){\n    if(user.name == undefined || user.email == undefined || user.password == undefined || user.username == undefined ){\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  validateEmail(email : string){\n    const regex = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    return regex.test(email)\n  }\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}